{"mappings":"ACIA,IAAM,EAAO,SAAS,oBAAoB,CAAC,KAAK,CAAC,EAAE,CAC7C,EAAQ,MAAM,IAAI,CAAC,EAAK,QAAQ,EA0BhC,EAvBG,AAuBoB,EAvBX,IAAI,CAAC,SAAC,CAAA,CAAG,CAAzB,EACE,IAAM,EAAc,SAClB,EAAE,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,IAAK,IAAI,OAAO,CAAC,IAAK,KAMjD,OAAO,AAJc,SACnB,EAAE,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,IAAK,IAAI,OAAO,CAAC,IAAK,KAG3B,CACxB,GAIO,AAYI,EAZK,GAAG,CAAC,SAAC,CAArB,EACE,MAAO,CACL,KAAM,EAAS,SAAS,CACxB,SAAU,EAAS,OAAO,CAAC,QAAQ,CACnC,OAAQ,EAAS,OAAO,CAAC,MAAM,CAC/B,IAAK,EAAS,OAAO,CAAC,GAAG,AAC3B,CACF,GAOF,EAAY,OAAO,CAAC,SAAC,CAArB,EAA8B,OAAA,EAAK,WAAW,CAAC,E","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\n// write code here\nvar list = document.getElementsByTagName(\"ul\")[0];\nvar users = Array.from(list.children);\nfunction sortList(userList) {\n    return userList.sort(function(a, b) {\n        var firstSalary = parseInt(a.dataset.salary.replace(\"$\", \"\").replace(\",\", \"\"));\n        var secondSalary = parseInt(b.dataset.salary.replace(\"$\", \"\").replace(\",\", \"\"));\n        return secondSalary - firstSalary;\n    });\n}\nfunction getEmployees(userList) {\n    return userList.map(function(employee) {\n        return {\n            name: employee.innerText,\n            position: employee.dataset.position,\n            salary: employee.dataset.salary,\n            age: employee.dataset.age\n        };\n    });\n}\nvar sortedUsers = sortList(users);\ngetEmployees(users);\nsortedUsers.forEach(function(user) {\n    return list.appendChild(user);\n});\n\n//# sourceMappingURL=index.bb867eae.js.map\n","'use strict';\n\n// write code here\n\nconst list = document.getElementsByTagName('ul')[0];\nconst users = Array.from(list.children);\n\nfunction sortList(userList) {\n  return userList.sort((a, b) => {\n    const firstSalary = parseInt(\n      a.dataset.salary.replace('$', '').replace(',', ''),\n    );\n    const secondSalary = parseInt(\n      b.dataset.salary.replace('$', '').replace(',', ''),\n    );\n\n    return secondSalary - firstSalary;\n  });\n}\n\nfunction getEmployees(userList) {\n  return userList.map((employee) => {\n    return {\n      name: employee.innerText,\n      position: employee.dataset.position,\n      salary: employee.dataset.salary,\n      age: employee.dataset.age,\n    };\n  });\n}\n\nconst sortedUsers = sortList(users);\n\ngetEmployees(users);\n\nsortedUsers.forEach((user) => list.appendChild(user));\n"],"names":["list","document","getElementsByTagName","users","Array","from","children","sortedUsers","userList","sort","a","b","firstSalary","parseInt","dataset","salary","replace","secondSalary","map","employee","name","innerText","position","age","forEach","user","appendChild"],"version":3,"file":"index.bb867eae.js.map"}