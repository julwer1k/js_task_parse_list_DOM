{"mappings":"AAAA;AAEA,kBAAkB;AAElB,MAAM,OAAO,SAAS,oBAAoB,CAAC,KAAK,CAAC,EAAE;AACnD,MAAM,QAAQ,MAAM,IAAI,CAAC,KAAK,QAAQ;AAEtC,SAAS,SAAS,QAAQ;IACxB,OAAO,SAAS,IAAI,CAAC,CAAC,GAAG;QACvB,MAAM,cAAc,SAClB,EAAE,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,KAAK;QAEjD,MAAM,eAAe,SACnB,EAAE,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,KAAK;QAGjD,OAAO,eAAe;IACxB;AACF;AAEA,SAAS,aAAa,QAAQ;IAC5B,OAAO,SAAS,GAAG,CAAC,CAAC;QACnB,OAAO;YACL,MAAM,SAAS,SAAS;YACxB,UAAU,SAAS,OAAO,CAAC,QAAQ;YACnC,QAAQ,SAAS,OAAO,CAAC,MAAM;YAC/B,KAAK,SAAS,OAAO,CAAC,GAAG;QAC3B;IACF;AACF;AAEA,MAAM,cAAc,SAAS;AAE7B,aAAa;AAEb,YAAY,OAAO,CAAC,CAAC,OAAS,KAAK,WAAW,CAAC","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\n// write code here\n\nconst list = document.getElementsByTagName('ul')[0];\nconst users = Array.from(list.children);\n\nfunction sortList(userList) {\n  return userList.sort((a, b) => {\n    const firstSalary = parseInt(\n      a.dataset.salary.replace('$', '').replace(',', ''),\n    );\n    const secondSalary = parseInt(\n      b.dataset.salary.replace('$', '').replace(',', ''),\n    );\n\n    return secondSalary - firstSalary;\n  });\n}\n\nfunction getEmployees(userList) {\n  return userList.map((employee) => {\n    return {\n      name: employee.innerText,\n      position: employee.dataset.position,\n      salary: employee.dataset.salary,\n      age: employee.dataset.age,\n    };\n  });\n}\n\nconst sortedUsers = sortList(users);\n\ngetEmployees(users);\n\nsortedUsers.forEach((user) => list.appendChild(user));\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}